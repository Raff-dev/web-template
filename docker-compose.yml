version: "3.9"

volumes:
  node_modules: {}
  postgres_data: {}
  redis: {}

x-appname: &appname
  build:
    context: ./backend
    dockerfile: Dockerfile
  volumes:
    - ./backend/appname:/app/appname
  working_dir: /app

services:
  backend:
    <<: *appname
    container_name: appname-backend
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000

  frontend:
    container_name: appname-frontend
    command: npm run dev
    working_dir: /app
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    ports:
      - 3000:3000
    volumes:
      - ./frontend:/app
      - node_modules:/app/node_modules
    env_file: ./frontend/.env

  redis:
    container_name: appname-redis
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - redis:/data

  postgres:
    container_name: appname-postgres
    image: postgres:13
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: appname
      POSTGRES_USER: appname
      POSTGRES_PASSWORD: appname
    volumes:
      - postgres_data:/var/lib/postgresql/data

  worker:
    <<: *appname
    container_name: appname-worker
    command: celery -A appname.config.celery worker --loglevel=info
    depends_on:
      - redis

  flower:
    <<: *appname
    container_name: appname-flower
    command: celery -A appname.config.celery flower --loglevel=info
    ports:
      - "5555:5555"
    depends_on:
      - worker

